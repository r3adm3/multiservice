apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice-fe
  labels:
    app: myservice-fe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice-fe
  template:
    metadata:
      labels:
        app: myservice-fe
    spec:
      containers:
      - image: {{ .Values.locationOfImages }}/multiservice_frontend:{{ .Values.feContainerVer }}
        name: multiservice-fe
        ports:
        - containerPort: 8080
        env: 
          - name: KUBEENV
            value: "true"
          - name: ASPNETCORE_ENVIRONMENT
            value: "Production"
        securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice-as
  labels:
    app: myservice-as
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice-as
  template:
    metadata:
      labels:
        app: myservice-as
    spec:
      containers:
      - image: {{ .Values.locationOfImages }}/multiservice_addsvc:{{ .Values.addContainerVer }}
        name: multiservice-as
        ports:
        - containerPort: 8081
        securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice-mxs
  labels:
    app: myservice-mxs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice-mxs
  template:
    metadata:
      labels:
        app: myservice-mxs
    spec:
      containers:
      - image: {{ .Values.locationOfImages }}/multiservice_multiplysvc:{{ .Values.mxsContainerVer }}
        name: multiservice-mxs
        ports:
        - containerPort: 8082
        securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice-mis
  labels:
    app: myservice-mis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice-mis
  template:
    metadata:
      labels:
        app: myservice-mis
    spec:
      containers:
      - image: {{ .Values.locationOfImages }}/multiservice_minussvc:{{ .Values.minusContainerVer }}
        name: multiservice-mis
        ports:
        - containerPort: 8083
        securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop:
                - all
              add:
                - NET_BIND_SERVICE
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myservice-adddbls
  labels:
    app: myservice-adddbls
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myservice-adddbls
  template:
    metadata:
      labels:
        app: myservice-adddbls
    spec:
      containers:
      - image: {{ .Values.locationOfImages }}/multiservice_addanddblsvc:{{ .Values.containerVer }}
        name: multiservice-adddbls
        ports:
        - containerPort: 8084
        securityContext:
           allowPrivilegeEscalation: false
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myservice-fe
  name: myservice-fe
spec:
  ports:
  - nodePort: 30500
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: myservice-fe
  type: {{ .Values.exposeType }}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myservice-as
  name: myservice-as
spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector: 
      app: myservice-as
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myservice-mxs
  name: myservice-mxs
spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector: 
      app: myservice-mxs
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myservice-mis
  name: myservice-mis
spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
    selector: 
      app: myservice-mis
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: myservice-adddbls
  name: myservice-adddbls
spec:
    ports:
    - port: 80
      protocol: TCP
      targetPort: 80
    selector: 
      app: myservice-adddbls